------CLASSES------
org.deeplearning4j.nn.multilayer.MultiLayerNetwork
org.deeplearning4j.nn.conf.NeuralNetConfiguration.Builder
org.deeplearning4j.nn.conf.layers.DenseLayer.Builder
org.nd4j.linalg.dataset.DataSet
org.deeplearning4j.nn.conf.layers.OutputLayer.Builder
org.nd4j.linalg.api.ndarray.INDArray
org.deeplearning4j.optimize.listeners.ScoreIterationListener
org.deeplearning4j.nn.conf.layers.OutputLayer
org.nd4j.linalg.learning.config.Nesterovs
org.deeplearning4j.nn.conf.layers.DenseLayer
org.deeplearning4j.nn.conf.NeuralNetConfiguration
------END OF CLASSES------
------API CALLS------
org.nd4j.linalg.factory.Nd4j.hstack(org.nd4j.linalg.api.ndarray.INDArray...)
org.nd4j.linalg.factory.Nd4j.create(double[])
------END OF API CALLS------
------CONSTRUCTORS------
org.deeplearning4j.nn.conf.layers.DenseLayer.Builder.build()
org.deeplearning4j.nn.conf.NeuralNetConfiguration.ListBuilder.layer(int, org.deeplearning4j.nn.conf.layers.Layer)
org.deeplearning4j.nn.conf.layers.OutputLayer.Builder.build()
org.deeplearning4j.nn.conf.layers.FeedForwardLayer.Builder.nIn(int)
org.deeplearning4j.optimize.listeners.ScoreIterationListener.ScoreIterationListener(int)
org.deeplearning4j.nn.multilayer.MultiLayerNetwork.MultiLayerNetwork(org.deeplearning4j.nn.conf.MultiLayerConfiguration)
org.nd4j.linalg.dataset.DataSet.DataSet(org.nd4j.linalg.api.ndarray.INDArray, org.nd4j.linalg.api.ndarray.INDArray)
org.deeplearning4j.nn.conf.NeuralNetConfiguration.ListBuilder.build()
org.deeplearning4j.nn.conf.layers.DenseLayer.Builder.DenseLayer$Builder()
org.nd4j.linalg.learning.config.Nesterovs.Nesterovs(double, double)
org.deeplearning4j.nn.conf.NeuralNetConfiguration.Builder.weightInit(org.deeplearning4j.nn.weights.WeightInit)
org.deeplearning4j.nn.conf.NeuralNetConfiguration.Builder.list()
org.deeplearning4j.nn.conf.layers.OutputLayer.Builder.OutputLayer$Builder(org.nd4j.linalg.lossfunctions.LossFunctions.LossFunction)
org.deeplearning4j.nn.conf.layers.FeedForwardLayer.Builder.nOut(int)
org.deeplearning4j.nn.conf.NeuralNetConfiguration.Builder.NeuralNetConfiguration$Builder()
org.deeplearning4j.nn.conf.NeuralNetConfiguration.Builder.updater(org.nd4j.linalg.learning.config.IUpdater)
org.deeplearning4j.nn.conf.layers.BaseLayer.Builder.activation(org.nd4j.linalg.activations.Activation)
org.deeplearning4j.nn.conf.NeuralNetConfiguration.Builder.seed(long)
------END OF CONSTRUCTORS------
