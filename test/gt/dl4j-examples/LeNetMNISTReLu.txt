------CLASSES------
org.deeplearning4j.nn.conf.NeuralNetConfiguration.Builder
org.datavec.api.io.labels.ParentPathLabelGenerator
org.deeplearning4j.nn.conf.layers.DenseLayer.Builder
org.deeplearning4j.nn.conf.layers.ConvolutionLayer
org.deeplearning4j.nn.conf.layers.OutputLayer.Builder
org.nd4j.linalg.dataset.api.preprocessor.DataNormalization
org.deeplearning4j.optimize.listeners.ScoreIterationListener
org.nd4j.linalg.dataset.api.iterator.DataSetIterator
org.datavec.image.recordreader.ImageRecordReader
org.deeplearning4j.nn.conf.layers.OutputLayer
org.datavec.api.split.FileSplit
org.deeplearning4j.nn.conf.layers.DenseLayer
org.deeplearning4j.nn.conf.NeuralNetConfiguration
org.deeplearning4j.nn.conf.layers.SubsamplingLayer
org.nd4j.linalg.dataset.api.preprocessor.ImagePreProcessingScaler
org.deeplearning4j.nn.multilayer.MultiLayerNetwork
org.nd4j.evaluation.classification.Evaluation
org.deeplearning4j.nn.conf.MultiLayerConfiguration
org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator
org.deeplearning4j.nn.conf.layers.ConvolutionLayer.Builder
org.deeplearning4j.nn.conf.layers.SubsamplingLayer.Builder
org.nd4j.linalg.learning.config.Nesterovs
------END OF CLASSES------
------API CALLS------
org.deeplearning4j.nn.conf.layers.DenseLayer.Builder.build()
org.deeplearning4j.nn.conf.layers.OutputLayer.Builder.build()
org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners(org.deeplearning4j.optimize.api.TrainingListener...)
org.deeplearning4j.nn.conf.layers.ConvolutionLayer.Builder.stride(int...)
org.deeplearning4j.nn.conf.NeuralNetConfiguration.Builder.l2(double)
org.deeplearning4j.nn.multilayer.MultiLayerNetwork.evaluate(org.nd4j.linalg.dataset.api.iterator.DataSetIterator)
org.deeplearning4j.nn.conf.NeuralNetConfiguration.Builder.weightInit(org.deeplearning4j.nn.weights.WeightInit)
org.deeplearning4j.nn.conf.NeuralNetConfiguration.Builder.list()
org.deeplearning4j.nn.conf.NeuralNetConfiguration.ListBuilder.setInputType(org.deeplearning4j.nn.conf.inputs.InputType)
org.deeplearning4j.nn.conf.layers.ConvolutionLayer.Builder.build()
org.nd4j.linalg.dataset.api.preprocessor.DataNormalization.fit(org.nd4j.linalg.dataset.api.iterator.DataSetIterator)
org.deeplearning4j.nn.conf.layers.SubsamplingLayer.Builder.stride(int...)
org.datavec.image.recordreader.BaseImageRecordReader.initialize(org.datavec.api.split.InputSplit)
org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit(org.nd4j.linalg.dataset.api.iterator.DataSetIterator)
org.deeplearning4j.nn.conf.layers.SubsamplingLayer.Builder.build()
org.deeplearning4j.nn.conf.layers.FeedForwardLayer.Builder.nIn(int)
org.deeplearning4j.nn.conf.NeuralNetConfiguration.ListBuilder.build()
org.deeplearning4j.nn.conf.NeuralNetConfiguration.ListBuilder.layer(org.deeplearning4j.nn.conf.layers.Layer)
org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset()
org.deeplearning4j.nn.conf.layers.SubsamplingLayer.Builder.kernelSize(int...)
org.deeplearning4j.nn.conf.inputs.InputType.convolutionalFlat(long, long, long)
org.deeplearning4j.nn.conf.layers.FeedForwardLayer.Builder.nOut(int)
org.deeplearning4j.nn.conf.NeuralNetConfiguration.Builder.updater(org.nd4j.linalg.learning.config.IUpdater)
org.nd4j.linalg.dataset.api.iterator.DataSetIterator.setPreProcessor(org.nd4j.linalg.dataset.api.DataSetPreProcessor)
org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init()
org.deeplearning4j.nn.conf.layers.BaseLayer.Builder.activation(org.nd4j.linalg.activations.Activation)
org.deeplearning4j.util.ModelSerializer.writeModel(org.deeplearning4j.nn.api.Model, java.io.File, boolean)
org.deeplearning4j.nn.conf.NeuralNetConfiguration.Builder.seed(long)
------END OF API CALLS------
------CONSTRUCTORS------
org.deeplearning4j.nn.conf.layers.ConvolutionLayer.Builder.ConvolutionLayer$Builder(int...)
org.deeplearning4j.optimize.listeners.ScoreIterationListener.ScoreIterationListener(int)
org.deeplearning4j.nn.multilayer.MultiLayerNetwork.MultiLayerNetwork(org.deeplearning4j.nn.conf.MultiLayerConfiguration)
org.nd4j.linalg.dataset.api.preprocessor.ImagePreProcessingScaler.ImagePreProcessingScaler()
org.deeplearning4j.nn.conf.layers.DenseLayer.Builder.DenseLayer$Builder()
org.datavec.image.recordreader.ImageRecordReader.ImageRecordReader(long, long, long, org.datavec.api.io.labels.PathLabelGenerator)
org.deeplearning4j.nn.conf.layers.OutputLayer.Builder.OutputLayer$Builder(org.nd4j.linalg.lossfunctions.LossFunctions.LossFunction)
org.nd4j.linalg.learning.config.Nesterovs.Nesterovs(org.nd4j.linalg.schedule.ISchedule)
org.deeplearning4j.nn.conf.NeuralNetConfiguration.Builder.NeuralNetConfiguration$Builder()
org.deeplearning4j.nn.conf.layers.SubsamplingLayer.Builder.SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer.PoolingType)
org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.RecordReaderDataSetIterator(org.datavec.api.records.reader.RecordReader, int, int, int)
org.datavec.api.split.FileSplit.FileSplit(java.io.File, java.lang.String[], java.util.Random)
org.datavec.api.io.labels.ParentPathLabelGenerator.ParentPathLabelGenerator()
------END OF CONSTRUCTORS------
