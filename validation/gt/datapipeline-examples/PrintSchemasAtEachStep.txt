------CLASSES------
org.datavec.api.transform.schema.Schema.Builder
org.datavec.api.transform.condition.column.CategoricalColumnCondition
org.datavec.api.transform.TransformProcess
org.datavec.api.transform.TransformProcess.Builder
org.datavec.api.transform.filter.ConditionFilter
org.datavec.api.transform.schema.Schema
------END OF CLASSES------
------API CALLS------
org.datavec.api.transform.schema.Schema.Builder.addColumnInteger(java.lang.String)
org.datavec.api.transform.schema.Schema.Builder.addColumnsString(java.lang.String...)
org.datavec.api.transform.TransformProcess.Builder.build()
org.datavec.api.transform.schema.Schema.Builder.build()
org.datavec.api.transform.schema.Schema.Builder.addColumnDouble(java.lang.String, java.lang.Double, java.lang.Double, boolean, boolean)
org.datavec.api.transform.TransformProcess.Builder.filter(org.datavec.api.transform.filter.Filter)
org.datavec.api.transform.TransformProcess.Builder.removeColumns(java.lang.String...)
org.datavec.api.transform.schema.Schema.Builder.addColumnCategorical(java.lang.String, java.util.List<java.lang.String>)
org.datavec.api.transform.TransformProcess.Builder.renameColumn(java.lang.String, java.lang.String)
------END OF API CALLS------
------CONSTRUCTORS------
org.datavec.api.transform.TransformProcess.Builder.TransformProcess$Builder(org.datavec.api.transform.schema.Schema)
org.datavec.api.transform.condition.column.CategoricalColumnCondition.CategoricalColumnCondition(java.lang.String, org.datavec.api.transform.condition.ConditionOp, java.util.Set<java.lang.String>)
org.datavec.api.transform.schema.Schema.Builder.Schema$Builder()
org.datavec.api.transform.filter.ConditionFilter.ConditionFilter(org.datavec.api.transform.condition.Condition)
------END OF CONSTRUCTORS------
